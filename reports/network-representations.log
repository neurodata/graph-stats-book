Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd

network_features = []
for network in networks:
    modularity_ = modularity(network)
    network_density_ = network_density(network)
    clustering_coefficient_ = clustering_coefficient(network)
    path_length_ = path_length(network)
    features = {"Modularity": modularity_, "Network Density": network_density_, 
                "Clustering Coefficient": clustering_coefficient_, "Average Path Length": path_length_}
    network_features.append(features)
    
df = pd.DataFrame(network_features)
feature_correlation = df.corr()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mStopIteration[0m                             Traceback (most recent call last)
Input [0;32mIn [4][0m, in [0;36m<cell line: 4>[0;34m()[0m
[1;32m      3[0m network_features [38;5;241m=[39m []
[1;32m      4[0m [38;5;28;01mfor[39;00m network [38;5;129;01min[39;00m networks:
[0;32m----> 5[0m     modularity_ [38;5;241m=[39m [43mmodularity[49m[43m([49m[43mnetwork[49m[43m)[49m
[1;32m      6[0m     network_density_ [38;5;241m=[39m network_density(network)
[1;32m      7[0m     clustering_coefficient_ [38;5;241m=[39m clustering_coefficient(network)

Input [0;32mIn [3][0m, in [0;36mpreprocess.<locals>.wrapper[0;34m(network)[0m
[1;32m      5[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(f)
[1;32m      6[0m [38;5;28;01mdef[39;00m [38;5;21mwrapper[39m(network):
[1;32m      7[0m     network [38;5;241m=[39m nx[38;5;241m.[39mfrom_numpy_matrix(network)
[0;32m----> 8[0m     [38;5;28;01mreturn[39;00m [43mf[49m[43m([49m[43mnetwork[49m[43m)[49m

Input [0;32mIn [3][0m, in [0;36mmodularity[0;34m(network)[0m
[1;32m     11[0m [38;5;129m@preprocess[39m
[1;32m     12[0m [38;5;28;01mdef[39;00m [38;5;21mmodularity[39m(network):
[0;32m---> 13[0m     communities [38;5;241m=[39m [43mnx[49m[38;5;241;43m.[39;49m[43malgorithms[49m[38;5;241;43m.[39;49m[43mcommunity[49m[38;5;241;43m.[39;49m[43mgreedy_modularity_communities[49m[43m([49m[43mnetwork[49m[43m)[49m
[1;32m     14[0m     Q [38;5;241m=[39m nx[38;5;241m.[39malgorithms[38;5;241m.[39mcommunity[38;5;241m.[39mquality[38;5;241m.[39mmodularity(network, communities)
[1;32m     15[0m     [38;5;28;01mreturn[39;00m Q

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/networkx/algorithms/community/modularity_max.py:354[0m, in [0;36mgreedy_modularity_communities[0;34m(G, weight, resolution, cutoff, best_n, n_communities)[0m
[1;32m    352[0m [38;5;66;03m# continue merging communities until one of the breaking criteria is satisfied[39;00m
[1;32m    353[0m [38;5;28;01mwhile[39;00m [38;5;28mlen[39m(communities) [38;5;241m>[39m cutoff:
[0;32m--> 354[0m     dq [38;5;241m=[39m [38;5;28;43mnext[39;49m[43m([49m[43mcommunity_gen[49m[43m)[49m
[1;32m    355[0m     [38;5;28;01mif[39;00m dq [38;5;241m<[39m [38;5;241m0[39m [38;5;129;01mand[39;00m [38;5;28mlen[39m(communities) [38;5;241m<[39m[38;5;241m=[39m best_n:
[1;32m    356[0m         [38;5;28;01mbreak[39;00m

[0;31mStopIteration[0m: 
StopIteration: 


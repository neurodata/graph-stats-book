Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1085, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 551, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 846, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 748, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import networkx as nx
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
from graphbook_code import heatmap

img = mpimg.imread('./img/newyork.png')

G = nx.DiGraph()

G.add_node("SI", pos=(1,1))
G.add_node("MH", pos=(4,4))
G.add_node("BK", pos=(4,2))
G.add_node("Q", pos=(6,3))
G.add_node("BX", pos=(6,6))

pos = nx.get_node_attributes(G, 'pos')
G.add_edge("SI", "BK")
G.add_edge("MH", "BK")
G.add_edge("MH", "Q")
G.add_edge("MH", "BX")
G.add_edge("Q", "BX")

G.add_edge("BK", "SI")
G.add_edge("BK", "MH")
G.add_edge("Q", "MH")
G.add_edge("BX", "MH")
G.add_edge("BX", "Q")

A = nx.to_numpy_matrix(G)

fig, axs = plt.subplots(1,3, figsize=(23, 6))
axs[0].imshow(img, alpha=.8, interpolation='nearest', aspect='auto')
axs[0].axis('off')
axs[0].set_title("Map of New York City Boroughs and Connections")
nx.draw_networkx(G, pos, ax=axs[1], with_labels=True, node_color="tab:blue", node_size = 800,
        font_size=15, font_color="whitesmoke", arrows=True)
axs[1].set_title("Layout Plot of New York City Boroughs and Connections")
heatmap(A, ax=axs[2], xticklabels=[0.5,1.5,2.5,3.5,4.5], yticklabels=[0.5,1.5,2.5,3.5,4.5])
axs[2].set_title("Adjacency Matrix of New York City Boroughs and Connections")
axs[2].set_xticklabels(["SI", "MH", "BK", "Q", "BX"])
axs[2].set_yticklabels(["SI", "MH", "BK", "Q", "BX"])
fig;
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mImportError[0m                               Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<module>[0;34m[0m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mimage[39;00m [38;5;28;01mas[39;00m [38;5;21;01mmpimg[39;00m
[0;32m----> 4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mgraphbook_code[39;00m [38;5;28;01mimport[39;00m heatmap
[1;32m      6[0m img [38;5;241m=[39m mpimg[38;5;241m.[39mimread([38;5;124m'[39m[38;5;124m./img/newyork.png[39m[38;5;124m'[39m)
[1;32m      8[0m G [38;5;241m=[39m nx[38;5;241m.[39mDiGraph()

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graphbook_code/__init__.py:31[0m, in [0;36m<module>[0;34m[0m
[1;32m     29[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01msiem[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m
[1;32m     30[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01msbm[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m
[0;32m---> 31[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mier[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graphbook_code/ier.py:15[0m, in [0;36m<module>[0;34m[0m
[1;32m     13[0m [38;5;28;01mfrom[39;00m [38;5;21;01mscipy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mstats[39;00m [38;5;28;01mimport[39;00m bernoulli
[1;32m     14[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtyping[39;00m [38;5;28;01mimport[39;00m Any, Callable, Optional, Union
[0;32m---> 15[0m [38;5;28;01mfrom[39;00m [38;5;21;01mgraspologic[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtypes[39;00m [38;5;28;01mimport[39;00m Dict, List, Tuple
[1;32m     17[0m [38;5;28;01mdef[39;00m [38;5;21mier[39m(
[1;32m     18[0m     P: np[38;5;241m.[39mndarray,
[1;32m     19[0m     rescale: [38;5;28mbool[39m [38;5;241m=[39m [38;5;28;01mFalse[39;00m,
[0;32m   (...)[0m
[1;32m     23[0m     wtargs: Optional[Dict[[38;5;28mstr[39m, Any]] [38;5;241m=[39m [38;5;28;01mNone[39;00m,
[1;32m     24[0m ) [38;5;241m-[39m[38;5;241m>[39m np[38;5;241m.[39mndarray:
[1;32m     25[0m     [38;5;124mr[39m[38;5;124;03m"""[39;00m
[1;32m     26[0m [38;5;124;03m    Samples a random graph, given a probability matrix.[39;00m
[1;32m     27[0m [38;5;124;03m    :math:`P = (p_{ij})_{i,j = 1}^n` is the probability matrix, where each entry :math:`p_{ij} \in [0, 1]`[39;00m
[0;32m   (...)[0m
[1;32m     68[0m [38;5;124;03m           [1., 1., 1., 0., 0.]])[39;00m
[1;32m     69[0m [38;5;124;03m    """[39;00m

[0;31mImportError[0m: cannot import name 'Dict' from 'graspologic.types' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graspologic/types.py)
ImportError: cannot import name 'Dict' from 'graspologic.types' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graspologic/types.py)


Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import graspologic as gp


n = 10  # number of nodes
nsims = 200  # number of networks to simulate
p = 0.4

As = [gp.simulations.er_np(n, p, directed=False, loops=False) for i in range(0, nsims)]  # realizations
fit_models = [gp.models.EREstimator(directed=False, loops=False).fit(A) for A in As]  # fit ER models
hatps = [model.p_ for model in fit_models]  # the probability parameters
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mJSONDecodeError[0m                           Traceback (most recent call last)
Input [0;32mIn [8][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mgraspologic[39;00m [38;5;28;01mas[39;00m [38;5;21;01mgp[39;00m
[1;32m      4[0m n [38;5;241m=[39m [38;5;241m10[39m  [38;5;66;03m# number of nodes[39;00m
[1;32m      5[0m nsims [38;5;241m=[39m [38;5;241m200[39m  [38;5;66;03m# number of networks to simulate[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graspologic/__init__.py:9[0m, in [0;36m<module>[0;34m[0m
[1;32m      7[0m [38;5;28;01mimport[39;00m [38;5;21;01mgraspologic[39;00m[38;5;21;01m.[39;00m[38;5;21;01membed[39;00m
[1;32m      8[0m [38;5;28;01mimport[39;00m [38;5;21;01mgraspologic[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m
[0;32m----> 9[0m [38;5;28;01mimport[39;00m [38;5;21;01mgraspologic[39;00m[38;5;21;01m.[39;00m[38;5;21;01mlayouts[39;00m
[1;32m     10[0m [38;5;28;01mimport[39;00m [38;5;21;01mgraspologic[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmodels[39;00m
[1;32m     11[0m [38;5;28;01mimport[39;00m [38;5;21;01mgraspologic[39;00m[38;5;21;01m.[39;00m[38;5;21;01mnominate[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graspologic/layouts/__init__.py:6[0m, in [0;36m<module>[0;34m[0m
[1;32m      1[0m [38;5;66;03m# Copyright (c) Microsoft Corporation.[39;00m
[1;32m      2[0m [38;5;66;03m# Licensed under the MIT license.[39;00m
[1;32m      5[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mclasses[39;00m [38;5;28;01mimport[39;00m NodePosition
[0;32m----> 6[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mcolors[39;00m [38;5;28;01mimport[39;00m categorical_colors, sequential_colors
[1;32m      7[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mrender[39;00m [38;5;28;01mimport[39;00m save_graph, show_graph
[1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mauto[39;00m [38;5;28;01mimport[39;00m layout_tsne, layout_umap  [38;5;66;03m# isort:skip[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graspologic/layouts/colors.py:36[0m, in [0;36m<module>[0;34m[0m
[1;32m     32[0m     dark: Dict[Any, Any] [38;5;241m=[39m thematic_json[[38;5;124m"[39m[38;5;124mdark[39m[38;5;124m"[39m]
[1;32m     33[0m     [38;5;28;01mreturn[39;00m light, dark
[0;32m---> 36[0m _CACHED_LIGHT, _CACHED_DARK [38;5;241m=[39m [43m_load_thematic_json[49m[43m([49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[1;32m     39[0m [38;5;28;01mdef[39;00m [38;5;21m_get_colors[39m(light_background: [38;5;28mbool[39m, theme_path: Optional[[38;5;28mstr[39m]) [38;5;241m-[39m[38;5;241m>[39m Dict[Any, Any]:
[1;32m     40[0m     light [38;5;241m=[39m _CACHED_LIGHT

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/graspologic/layouts/colors.py:30[0m, in [0;36m_load_thematic_json[0;34m(path)[0m
[1;32m     27[0m     colors_path [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mjoin(include_path, [38;5;124m"[39m[38;5;124mcolors-100.json[39m[38;5;124m"[39m)
[1;32m     29[0m [38;5;28;01mwith[39;00m [38;5;28mopen[39m(colors_path) [38;5;28;01mas[39;00m thematic_json_io:
[0;32m---> 30[0m     thematic_json [38;5;241m=[39m [43mjson[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mthematic_json_io[49m[43m)[49m
[1;32m     31[0m light: Dict[Any, Any] [38;5;241m=[39m thematic_json[[38;5;124m"[39m[38;5;124mlight[39m[38;5;124m"[39m]
[1;32m     32[0m dark: Dict[Any, Any] [38;5;241m=[39m thematic_json[[38;5;124m"[39m[38;5;124mdark[39m[38;5;124m"[39m]

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/json/__init__.py:293[0m, in [0;36mload[0;34m(fp, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)[0m
[1;32m    274[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m(fp, [38;5;241m*[39m, [38;5;28mcls[39m[38;5;241m=[39m[38;5;28;01mNone[39;00m, object_hook[38;5;241m=[39m[38;5;28;01mNone[39;00m, parse_float[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    275[0m         parse_int[38;5;241m=[39m[38;5;28;01mNone[39;00m, parse_constant[38;5;241m=[39m[38;5;28;01mNone[39;00m, object_pairs_hook[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkw):
[1;32m    276[0m     [38;5;124;03m"""Deserialize ``fp`` (a ``.read()``-supporting file-like object containing[39;00m
[1;32m    277[0m [38;5;124;03m    a JSON document) to a Python object.[39;00m
[1;32m    278[0m 
[0;32m   (...)[0m
[1;32m    291[0m [38;5;124;03m    kwarg; otherwise ``JSONDecoder`` is used.[39;00m
[1;32m    292[0m [38;5;124;03m    """[39;00m
[0;32m--> 293[0m     [38;5;28;01mreturn[39;00m [43mloads[49m[43m([49m[43mfp[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43m)[49m[43m,[49m
[1;32m    294[0m [43m        [49m[38;5;28;43mcls[39;49m[38;5;241;43m=[39;49m[38;5;28;43mcls[39;49m[43m,[49m[43m [49m[43mobject_hook[49m[38;5;241;43m=[39;49m[43mobject_hook[49m[43m,[49m
[1;32m    295[0m [43m        [49m[43mparse_float[49m[38;5;241;43m=[39;49m[43mparse_float[49m[43m,[49m[43m [49m[43mparse_int[49m[38;5;241;43m=[39;49m[43mparse_int[49m[43m,[49m
[1;32m    296[0m [43m        [49m[43mparse_constant[49m[38;5;241;43m=[39;49m[43mparse_constant[49m[43m,[49m[43m [49m[43mobject_pairs_hook[49m[38;5;241;43m=[39;49m[43mobject_pairs_hook[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/json/__init__.py:357[0m, in [0;36mloads[0;34m(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)[0m
[1;32m    352[0m     [38;5;28;01mdel[39;00m kw[[38;5;124m'[39m[38;5;124mencoding[39m[38;5;124m'[39m]
[1;32m    354[0m [38;5;28;01mif[39;00m ([38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m object_hook [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m
[1;32m    355[0m         parse_int [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m parse_float [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m
[1;32m    356[0m         parse_constant [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m object_pairs_hook [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m kw):
[0;32m--> 357[0m     [38;5;28;01mreturn[39;00m [43m_default_decoder[49m[38;5;241;43m.[39;49m[43mdecode[49m[43m([49m[43ms[49m[43m)[49m
[1;32m    358[0m [38;5;28;01mif[39;00m [38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    359[0m     [38;5;28mcls[39m [38;5;241m=[39m JSONDecoder

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/json/decoder.py:337[0m, in [0;36mJSONDecoder.decode[0;34m(self, s, _w)[0m
[1;32m    332[0m [38;5;28;01mdef[39;00m [38;5;21mdecode[39m([38;5;28mself[39m, s, _w[38;5;241m=[39mWHITESPACE[38;5;241m.[39mmatch):
[1;32m    333[0m     [38;5;124;03m"""Return the Python representation of ``s`` (a ``str`` instance[39;00m
[1;32m    334[0m [38;5;124;03m    containing a JSON document).[39;00m
[1;32m    335[0m 
[1;32m    336[0m [38;5;124;03m    """[39;00m
[0;32m--> 337[0m     obj, end [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mraw_decode[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43midx[49m[38;5;241;43m=[39;49m[43m_w[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m)[49m[38;5;241;43m.[39;49m[43mend[49m[43m([49m[43m)[49m[43m)[49m
[1;32m    338[0m     end [38;5;241m=[39m _w(s, end)[38;5;241m.[39mend()
[1;32m    339[0m     [38;5;28;01mif[39;00m end [38;5;241m!=[39m [38;5;28mlen[39m(s):

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/json/decoder.py:355[0m, in [0;36mJSONDecoder.raw_decode[0;34m(self, s, idx)[0m
[1;32m    353[0m     obj, end [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mscan_once(s, idx)
[1;32m    354[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m [38;5;28;01mas[39;00m err:
[0;32m--> 355[0m     [38;5;28;01mraise[39;00m JSONDecodeError([38;5;124m"[39m[38;5;124mExpecting value[39m[38;5;124m"[39m, s, err[38;5;241m.[39mvalue) [38;5;28;01mfrom[39;00m [38;5;28mNone[39m
[1;32m    356[0m [38;5;28;01mreturn[39;00m obj, end

[0;31mJSONDecodeError[0m: Expecting value: line 7 column 1 (char 6)
JSONDecodeError: Expecting value: line 7 column 1 (char 6)


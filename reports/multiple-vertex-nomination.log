Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from graspologic.nominate import VNviaSGM

# nrep is the number of permutations to perform
# when nrep is higher, the assignments will be more precise
nrep = 1000
vn_sgm = VNviaSGM(graph_match_kws = {'padding': 'adopted'}, n_init=nrep)

def print_nominees(vn_noms, n_nominees=5):
    """
    A function to properly organize and round the nominees.
    """
    for i in range(0, n_nominees):
        print("Node {:d}, soft assignment score of {:.3f}".format(int(vn_noms[i, 0]), vn_noms[i, 1]))
    return

nominees = vn_sgm.fit_predict(Asoc, Asurvey_shuffled, voi, [soc_seeds, survey_seeds])
print_nominees(nominees, n_nominees=5)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [6][0m, in [0;36m<cell line: 16>[0;34m()[0m
[1;32m     13[0m         [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mNode [39m[38;5;132;01m{:d}[39;00m[38;5;124m, soft assignment score of [39m[38;5;132;01m{:.3f}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;28mint[39m(vn_noms[i, [38;5;241m0[39m]), vn_noms[i, [38;5;241m1[39m]))
[1;32m     14[0m     [38;5;28;01mreturn[39;00m
[0;32m---> 16[0m nominees [38;5;241m=[39m [43mvn_sgm[49m[38;5;241;43m.[39;49m[43mfit_predict[49m[43m([49m[43mAsoc[49m[43m,[49m[43m [49m[43mAsurvey_shuffled[49m[43m,[49m[43m [49m[43mvoi[49m[43m,[49m[43m [49m[43m[[49m[43msoc_seeds[49m[43m,[49m[43m [49m[43msurvey_seeds[49m[43m][49m[43m)[49m
[1;32m     17[0m print_nominees(nominees, n_nominees[38;5;241m=[39m[38;5;241m5[39m)

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/graspologic/nominate/VNviaSGM.py:352[0m, in [0;36mVNviaSGM.fit_predict[0;34m(self, A, B, voi, seeds)[0m
[1;32m    324[0m [38;5;28;01mdef[39;00m [38;5;21mfit_predict[39m(
[1;32m    325[0m     [38;5;28mself[39m, A: np[38;5;241m.[39mndarray, B: np[38;5;241m.[39mndarray, voi: [38;5;28mint[39m, seeds: SeedsType
[1;32m    326[0m ) [38;5;241m-[39m[38;5;241m>[39m Optional[np[38;5;241m.[39mndarray]:
[1;32m    327[0m     [38;5;124;03m"""[39;00m
[1;32m    328[0m [38;5;124;03m    Fits model to two adjacency matrices and returns nomination list[39;00m
[1;32m    329[0m 
[0;32m   (...)[0m
[1;32m    350[0m [38;5;124;03m        The nomination list.[39;00m
[1;32m    351[0m [38;5;124;03m    """[39;00m
[0;32m--> 352[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mA[49m[43m,[49m[43m [49m[43mB[49m[43m,[49m[43m [49m[43mvoi[49m[43m,[49m[43m [49m[43mseeds[49m[43m)[49m
[1;32m    354[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mnomination_list_

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/graspologic/nominate/VNviaSGM.py:312[0m, in [0;36mVNviaSGM.fit[0;34m(self, A, B, voi, seeds)[0m
[1;32m    307[0m b_inds [38;5;241m=[39m b_reord[ind2]
[1;32m    309[0m [38;5;66;03m# Generate the nomination list. Note, the probability matrix does not[39;00m
[1;32m    310[0m [38;5;66;03m# include the seeds, so we must remove them from b_inds. Return a list[39;00m
[1;32m    311[0m [38;5;66;03m# sorted so it returns the vertex with the highest probability first.[39;00m
[0;32m--> 312[0m nomination_list_ [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mdstack[49m[43m([49m[43m([49m[43mb_inds[49m[43m[[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mn_seeds_[49m[43m [49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mprob_vector[49m[43m)[49m[43m)[49m[[38;5;241m0[39m]
[1;32m    313[0m nomination_list_ [38;5;241m=[39m nomination_list_[nomination_list_[:, [38;5;241m1[39m][38;5;241m.[39margsort()][::[38;5;241m-[39m[38;5;241m1[39m]
[1;32m    315[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmax_nominations [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39mmax_nominations [38;5;241m<[39m [38;5;28mlen[39m(
[1;32m    316[0m     nomination_list_
[1;32m    317[0m ):

File [0;32m<__array_function__ internals>:5[0m, in [0;36mdstack[0;34m(*args, **kwargs)[0m

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/numpy/lib/shape_base.py:723[0m, in [0;36mdstack[0;34m(tup)[0m
[1;32m    721[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(arrs, [38;5;28mlist[39m):
[1;32m    722[0m     arrs [38;5;241m=[39m [arrs]
[0;32m--> 723[0m [38;5;28;01mreturn[39;00m [43m_nx[49m[38;5;241;43m.[39;49m[43mconcatenate[49m[43m([49m[43marrs[49m[43m,[49m[43m [49m[38;5;241;43m2[39;49m[43m)[49m

File [0;32m<__array_function__ internals>:5[0m, in [0;36mconcatenate[0;34m(*args, **kwargs)[0m

[0;31mValueError[0m: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 36 and the array at index 1 has size 39
ValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 36 and the array at index 1 has size 39


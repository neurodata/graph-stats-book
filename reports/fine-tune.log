Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import contextlib

fetch_fmri_data()

As_raw = read_fmri_data()
with contextlib.redirect_stdout(None):
    As = np.stack([num_pipeline.fit_transform(A) for A in As_raw], axis=0)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/networkx/readwrite/edgelist.py:257[0m, in [0;36mparse_edgelist[0;34m(lines, comments, delimiter, create_using, nodetype, data)[0m
[1;32m    256[0m [38;5;28;01mtry[39;00m:
[0;32m--> 257[0m     u [38;5;241m=[39m [43mnodetype[49m[43m([49m[43mu[49m[43m)[49m
[1;32m    258[0m     v [38;5;241m=[39m nodetype(v)

[0;31mValueError[0m: invalid literal for int() with base 10: '"MetaData":'

The above exception was the direct cause of the following exception:

[0;31mTypeError[0m                                 Traceback (most recent call last)
Input [0;32mIn [2][0m, in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mcontextlib[39;00m
[1;32m      3[0m fetch_fmri_data()
[0;32m----> 5[0m As_raw [38;5;241m=[39m [43mread_fmri_data[49m[43m([49m[43m)[49m
[1;32m      6[0m [38;5;28;01mwith[39;00m contextlib[38;5;241m.[39mredirect_stdout([38;5;28;01mNone[39;00m):
[1;32m      7[0m     As [38;5;241m=[39m np[38;5;241m.[39mstack([num_pipeline[38;5;241m.[39mfit_transform(A) [38;5;28;01mfor[39;00m A [38;5;129;01min[39;00m As_raw], axis[38;5;241m=[39m[38;5;241m0[39m)

Input [0;32mIn [1][0m, in [0;36mread_fmri_data[0;34m(path)[0m
[1;32m     40[0m [38;5;28;01mdef[39;00m [38;5;21mread_fmri_data[39m(path[38;5;241m=[39mFMRI_PATH):
[1;32m     41[0m     [38;5;124;03m"""[39;00m
[1;32m     42[0m [38;5;124;03m    A function which loads the connectomes as adjacency matrices.[39;00m
[1;32m     43[0m [38;5;124;03m    """[39;00m
[0;32m---> 44[0m     networks [38;5;241m=[39m [import_edgelist(os[38;5;241m.[39mpath[38;5;241m.[39mjoin(path, fname)) [38;5;28;01mfor[39;00m fname [38;5;129;01min[39;00m os[38;5;241m.[39mlistdir(path)]
[1;32m     45[0m     [38;5;28;01mreturn[39;00m np[38;5;241m.[39mstack(networks, axis[38;5;241m=[39m[38;5;241m0[39m)

Input [0;32mIn [1][0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m     40[0m [38;5;28;01mdef[39;00m [38;5;21mread_fmri_data[39m(path[38;5;241m=[39mFMRI_PATH):
[1;32m     41[0m     [38;5;124;03m"""[39;00m
[1;32m     42[0m [38;5;124;03m    A function which loads the connectomes as adjacency matrices.[39;00m
[1;32m     43[0m [38;5;124;03m    """[39;00m
[0;32m---> 44[0m     networks [38;5;241m=[39m [[43mimport_edgelist[49m[43m([49m[43mos[49m[38;5;241;43m.[39;49m[43mpath[49m[38;5;241;43m.[39;49m[43mjoin[49m[43m([49m[43mpath[49m[43m,[49m[43m [49m[43mfname[49m[43m)[49m[43m)[49m [38;5;28;01mfor[39;00m fname [38;5;129;01min[39;00m os[38;5;241m.[39mlistdir(path)]
[1;32m     45[0m     [38;5;28;01mreturn[39;00m np[38;5;241m.[39mstack(networks, axis[38;5;241m=[39m[38;5;241m0[39m)

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/graspologic/utils/utils.py:178[0m, in [0;36mimport_edgelist[0;34m(path, extension, delimiter, nodetype, return_vertices)[0m
[1;32m    175[0m     msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mNo files found with [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m extension found.[39m[38;5;124m"[39m[38;5;241m.[39mformat(extension)
[1;32m    176[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(msg)
[0;32m--> 178[0m graphs [38;5;241m=[39m [
[1;32m    179[0m     nx[38;5;241m.[39mread_weighted_edgelist(f, nodetype[38;5;241m=[39mnodetype, delimiter[38;5;241m=[39mdelimiter)
[1;32m    180[0m     [38;5;28;01mfor[39;00m f [38;5;129;01min[39;00m files
[1;32m    181[0m ]
[1;32m    183[0m [38;5;28;01mif[39;00m [38;5;28mall[39m([38;5;28mlen[39m(G[38;5;241m.[39mnodes) [38;5;241m==[39m [38;5;241m0[39m [38;5;28;01mfor[39;00m G [38;5;129;01min[39;00m graphs):
[1;32m    184[0m     msg [38;5;241m=[39m (
[1;32m    185[0m         [38;5;124m"[39m[38;5;124mAll graphs have 0 vertices. Please double check if proper [39m[38;5;124m"[39m
[1;32m    186[0m         [38;5;241m+[39m [38;5;124m"[39m[38;5;124m'[39m[38;5;124mdelimiter[39m[38;5;124m'[39m[38;5;124m is given.[39m[38;5;124m"[39m
[1;32m    187[0m     )

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/graspologic/utils/utils.py:179[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m    175[0m     msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mNo files found with [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m extension found.[39m[38;5;124m"[39m[38;5;241m.[39mformat(extension)
[1;32m    176[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(msg)
[1;32m    178[0m graphs [38;5;241m=[39m [
[0;32m--> 179[0m     [43mnx[49m[38;5;241;43m.[39;49m[43mread_weighted_edgelist[49m[43m([49m[43mf[49m[43m,[49m[43m [49m[43mnodetype[49m[38;5;241;43m=[39;49m[43mnodetype[49m[43m,[49m[43m [49m[43mdelimiter[49m[38;5;241;43m=[39;49m[43mdelimiter[49m[43m)[49m
[1;32m    180[0m     [38;5;28;01mfor[39;00m f [38;5;129;01min[39;00m files
[1;32m    181[0m ]
[1;32m    183[0m [38;5;28;01mif[39;00m [38;5;28mall[39m([38;5;28mlen[39m(G[38;5;241m.[39mnodes) [38;5;241m==[39m [38;5;241m0[39m [38;5;28;01mfor[39;00m G [38;5;129;01min[39;00m graphs):
[1;32m    184[0m     msg [38;5;241m=[39m (
[1;32m    185[0m         [38;5;124m"[39m[38;5;124mAll graphs have 0 vertices. Please double check if proper [39m[38;5;124m"[39m
[1;32m    186[0m         [38;5;241m+[39m [38;5;124m"[39m[38;5;124m'[39m[38;5;124mdelimiter[39m[38;5;124m'[39m[38;5;124m is given.[39m[38;5;124m"[39m
[1;32m    187[0m     )

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/networkx/readwrite/edgelist.py:478[0m, in [0;36mread_weighted_edgelist[0;34m(path, comments, delimiter, create_using, nodetype, encoding)[0m
[1;32m    426[0m [38;5;28;01mdef[39;00m [38;5;21mread_weighted_edgelist[39m(
[1;32m    427[0m     path,
[1;32m    428[0m     comments[38;5;241m=[39m[38;5;124m"[39m[38;5;124m#[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m    432[0m     encoding[38;5;241m=[39m[38;5;124m"[39m[38;5;124mutf-8[39m[38;5;124m"[39m,
[1;32m    433[0m ):
[1;32m    434[0m     [38;5;124;03m"""Read a graph as list of edges with numeric weights.[39;00m
[1;32m    435[0m 
[1;32m    436[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    476[0m [38;5;124;03m    write_weighted_edgelist[39;00m
[1;32m    477[0m [38;5;124;03m    """[39;00m
[0;32m--> 478[0m     [38;5;28;01mreturn[39;00m [43mread_edgelist[49m[43m([49m
[1;32m    479[0m [43m        [49m[43mpath[49m[43m,[49m
[1;32m    480[0m [43m        [49m[43mcomments[49m[38;5;241;43m=[39;49m[43mcomments[49m[43m,[49m
[1;32m    481[0m [43m        [49m[43mdelimiter[49m[38;5;241;43m=[39;49m[43mdelimiter[49m[43m,[49m
[1;32m    482[0m [43m        [49m[43mcreate_using[49m[38;5;241;43m=[39;49m[43mcreate_using[49m[43m,[49m
[1;32m    483[0m [43m        [49m[43mnodetype[49m[38;5;241;43m=[39;49m[43mnodetype[49m[43m,[49m
[1;32m    484[0m [43m        [49m[43mdata[49m[38;5;241;43m=[39;49m[43m([49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mweight[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43mfloat[39;49m[43m)[49m[43m,[49m[43m)[49m[43m,[49m
[1;32m    485[0m [43m        [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    486[0m [43m    [49m[43m)[49m

File [0;32m<class 'networkx.utils.decorators.argmap'> compilation 5:5[0m, in [0;36margmap_read_edgelist_1[0;34m(path, comments, delimiter, create_using, nodetype, data, edgetype, encoding)[0m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mgzip[39;00m
[1;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01minspect[39;00m
[0;32m----> 5[0m [38;5;28;01mimport[39;00m [38;5;21;01mitertools[39;00m
[1;32m      6[0m [38;5;28;01mimport[39;00m [38;5;21;01mre[39;00m
[1;32m      7[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcollections[39;00m [38;5;28;01mimport[39;00m defaultdict

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/networkx/readwrite/edgelist.py:376[0m, in [0;36mread_edgelist[0;34m(path, comments, delimiter, create_using, nodetype, data, edgetype, encoding)[0m
[1;32m    310[0m [38;5;124;03m"""Read a graph from a list of edges.[39;00m
[1;32m    311[0m 
[1;32m    312[0m [38;5;124;03mParameters[39;00m
[0;32m   (...)[0m
[1;32m    373[0m [38;5;124;03mtypes (e.g. int, float, str, frozenset - or tuples of those, etc.)[39;00m
[1;32m    374[0m [38;5;124;03m"""[39;00m
[1;32m    375[0m lines [38;5;241m=[39m (line [38;5;28;01mif[39;00m [38;5;28misinstance[39m(line, [38;5;28mstr[39m) [38;5;28;01melse[39;00m line[38;5;241m.[39mdecode(encoding) [38;5;28;01mfor[39;00m line [38;5;129;01min[39;00m path)
[0;32m--> 376[0m [38;5;28;01mreturn[39;00m [43mparse_edgelist[49m[43m([49m
[1;32m    377[0m [43m    [49m[43mlines[49m[43m,[49m
[1;32m    378[0m [43m    [49m[43mcomments[49m[38;5;241;43m=[39;49m[43mcomments[49m[43m,[49m
[1;32m    379[0m [43m    [49m[43mdelimiter[49m[38;5;241;43m=[39;49m[43mdelimiter[49m[43m,[49m
[1;32m    380[0m [43m    [49m[43mcreate_using[49m[38;5;241;43m=[39;49m[43mcreate_using[49m[43m,[49m
[1;32m    381[0m [43m    [49m[43mnodetype[49m[38;5;241;43m=[39;49m[43mnodetype[49m[43m,[49m
[1;32m    382[0m [43m    [49m[43mdata[49m[38;5;241;43m=[39;49m[43mdata[49m[43m,[49m
[1;32m    383[0m [43m[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/networkx/readwrite/edgelist.py:260[0m, in [0;36mparse_edgelist[0;34m(lines, comments, delimiter, create_using, nodetype, data)[0m
[1;32m    258[0m         v [38;5;241m=[39m nodetype(v)
[1;32m    259[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m err:
[0;32m--> 260[0m         [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(
[1;32m    261[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mFailed to convert nodes [39m[38;5;132;01m{[39;00mu[38;5;132;01m}[39;00m[38;5;124m,[39m[38;5;132;01m{[39;00mv[38;5;132;01m}[39;00m[38;5;124m to type [39m[38;5;132;01m{[39;00mnodetype[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;124m"[39m
[1;32m    262[0m         ) [38;5;28;01mfrom[39;00m [38;5;21;01merr[39;00m
[1;32m    264[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(d) [38;5;241m==[39m [38;5;241m0[39m [38;5;129;01mor[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mFalse[39;00m:
[1;32m    265[0m     [38;5;66;03m# no data or data type specified[39;00m
[1;32m    266[0m     edgedata [38;5;241m=[39m {}

[0;31mTypeError[0m: Failed to convert nodes "MetaData":,{ to type <class 'int'>.
TypeError: Failed to convert nodes "MetaData":,{ to type <class 'int'>.


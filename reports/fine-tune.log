Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import contextlib

fetch_fmri_data()

As_raw = read_fmri_data()
with contextlib.redirect_stdout(None):
    As = np.stack([num_pipeline.fit_transform(A) for A in As_raw], axis=0)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [2][0m, in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mcontextlib[39;00m
[1;32m      3[0m fetch_fmri_data()
[0;32m----> 5[0m As_raw [38;5;241m=[39m [43mread_fmri_data[49m[43m([49m[43m)[49m
[1;32m      6[0m [38;5;28;01mwith[39;00m contextlib[38;5;241m.[39mredirect_stdout([38;5;28;01mNone[39;00m):
[1;32m      7[0m     As [38;5;241m=[39m np[38;5;241m.[39mstack([num_pipeline[38;5;241m.[39mfit_transform(A) [38;5;28;01mfor[39;00m A [38;5;129;01min[39;00m As_raw], axis[38;5;241m=[39m[38;5;241m0[39m)

Input [0;32mIn [1][0m, in [0;36mread_fmri_data[0;34m(path)[0m
[1;32m     41[0m [38;5;124;03m"""[39;00m
[1;32m     42[0m [38;5;124;03mA function which loads the connectomes as adjacency matrices.[39;00m
[1;32m     43[0m [38;5;124;03m"""[39;00m
[1;32m     44[0m networks [38;5;241m=[39m [import_edgelist(os[38;5;241m.[39mpath[38;5;241m.[39mjoin(path, fname)) [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124medgelist[39m[38;5;124m"[39m [38;5;129;01min[39;00m fname [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m [38;5;28;01mfor[39;00m fname [38;5;129;01min[39;00m os[38;5;241m.[39mlistdir(path)]
[0;32m---> 45[0m [38;5;28;01mreturn[39;00m [43mnp[49m[38;5;241;43m.[39;49m[43mstack[49m[43m([49m[43mnetworks[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[38;5;241;43m0[39;49m[43m)[49m

File [0;32m<__array_function__ internals>:5[0m, in [0;36mstack[0;34m(*args, **kwargs)[0m

File [0;32m/opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/numpy/core/shape_base.py:426[0m, in [0;36mstack[0;34m(arrays, axis, out)[0m
[1;32m    424[0m shapes [38;5;241m=[39m {arr[38;5;241m.[39mshape [38;5;28;01mfor[39;00m arr [38;5;129;01min[39;00m arrays}
[1;32m    425[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(shapes) [38;5;241m!=[39m [38;5;241m1[39m:
[0;32m--> 426[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mall input arrays must have the same shape[39m[38;5;124m'[39m)
[1;32m    428[0m result_ndim [38;5;241m=[39m arrays[[38;5;241m0[39m][38;5;241m.[39mndim [38;5;241m+[39m [38;5;241m1[39m
[1;32m    429[0m axis [38;5;241m=[39m normalize_axis_index(axis, result_ndim)

[0;31mValueError[0m: all input arrays must have the same shape
ValueError: all input arrays must have the same shape

